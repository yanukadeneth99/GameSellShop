/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.CardLayout;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.print.PageFormat;
import java.awt.print.Paper;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.math.BigInteger;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.Query;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author yanukadeneth
 */
public class Cashier_GUI extends javax.swing.JFrame implements Runnable {

    int hour, second, minute;
    CardLayout cLayout;
    Statement stmt;
    String usernameglobal;
    private final static Logger logr = Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);

    /**
     * Creates new form Manager_GUI
     */
    public Cashier_GUI() {
        initComponents();

        Thread t = new Thread(this);
        t.start();

        setExtendedState(JFrame.MAXIMIZED_BOTH);
        usernameglobal = "admin";
        cLayout = (CardLayout) JPC.getLayout();

        //DB Connection
        try {
            DatabaseConnection dbcon = new DatabaseConnection();
            Connection con = DriverManager.getConnection(dbcon.GETDBURL(), dbcon.GETDBUSERNAME(), dbcon.GETDBPASSWORD());
            stmt = con.createStatement();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage(), "Error : Database Connection Failed", JOptionPane.ERROR_MESSAGE);
            logr.log(Level.SEVERE, "Database Connection Failed", ex.getMessage());
        }
    }

    public Cashier_GUI(String username, Locale loc) {
        Locale.setDefault(loc);
        initComponents();

        Thread t = new Thread(this);
        t.start();

        setExtendedState(JFrame.MAXIMIZED_BOTH);

        usernameglobal = username;

        JPC_Welcome_lbl.setText("Welcome " + username);
        cLayout = (CardLayout) JPC.getLayout();

        //DB Connection
        try {
            DatabaseConnection dbcon = new DatabaseConnection();
            Connection con = DriverManager.getConnection(dbcon.GETDBURL(), dbcon.GETDBUSERNAME(), dbcon.GETDBPASSWORD());
            stmt = con.createStatement();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage(), "Error : Database Connection Failed", JOptionPane.ERROR_MESSAGE);
            logr.log(Level.SEVERE, "Database Connection Failed", ex.getMessage());
        }

        jLabel28.setText(username);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jFileChooser1 = new javax.swing.JFileChooser();
        SearchGameSearchGroup = new javax.swing.ButtonGroup();
        EditGameSearchGroup = new javax.swing.ButtonGroup();
        AddExistingGameSearchGroup = new javax.swing.ButtonGroup();
        DeleteGamesSearchGroup = new javax.swing.ButtonGroup();
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("GUI/Bundle"); // NOI18N
        GameSellShopPUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory(bundle.getString("Cashier_GUI.GameSellShopPUEntityManager.persistenceUnit")).createEntityManager(); // NOI18N
        gamesQuery = java.beans.Beans.isDesignTime() ? null : GameSellShopPUEntityManager.createQuery(bundle.getString("Cashier_GUI.gamesQuery.query")); // NOI18N
        gamesList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : gamesQuery.getResultList();
        genreQuery = java.beans.Beans.isDesignTime() ? null : GameSellShopPUEntityManager.createQuery(bundle.getString("Cashier_GUI.genreQuery.query")); // NOI18N
        genreList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : genreQuery.getResultList();
        statusQuery = java.beans.Beans.isDesignTime() ? null : GameSellShopPUEntityManager.createQuery(bundle.getString("Cashier_GUI.statusQuery.query")); // NOI18N
        statusList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : statusQuery.getResultList();
        usersQuery = java.beans.Beans.isDesignTime() ? null : GameSellShopPUEntityManager.createQuery(bundle.getString("Cashier_GUI.usersQuery.query")); // NOI18N
        usersList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : usersQuery.getResultList();
        usertypeQuery = java.beans.Beans.isDesignTime() ? null : GameSellShopPUEntityManager.createQuery(bundle.getString("Cashier_GUI.usertypeQuery.query")); // NOI18N
        usertypeList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : usertypeQuery.getResultList();
        languageQuery = java.beans.Beans.isDesignTime() ? null : GameSellShopPUEntityManager.createQuery(bundle.getString("Cashier_GUI.languageQuery.query")); // NOI18N
        languageList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : languageQuery.getResultList();
        purchasesQuery = java.beans.Beans.isDesignTime() ? null : GameSellShopPUEntityManager.createQuery(bundle.getString("Cashier_GUI.purchasesQuery.query")); // NOI18N
        purchasesList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : purchasesQuery.getResultList();
        ordersQuery = java.beans.Beans.isDesignTime() ? null : GameSellShopPUEntityManager.createQuery(bundle.getString("Cashier_GUI.ordersQuery.query")); // NOI18N
        ordersList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : ordersQuery.getResultList();
        JPL = new javax.swing.JPanel();
        L_btn_Dashboard = new javax.swing.JButton();
        L_btn_GamesList = new javax.swing.JButton();
        L_btn_SearchGames = new javax.swing.JButton();
        L_btn_AddGame = new javax.swing.JButton();
        L_btn_EditGame = new javax.swing.JButton();
        L_btn_API = new javax.swing.JButton();
        L_btn_Cart = new javax.swing.JButton();
        JPR = new javax.swing.JPanel();
        btn_logout = new javax.swing.JButton();
        btn_account = new javax.swing.JButton();
        btn_exit = new javax.swing.JButton();
        lbl_hour = new javax.swing.JLabel();
        lbl_minute = new javax.swing.JLabel();
        lbl_second = new javax.swing.JLabel();
        lbl_a = new javax.swing.JLabel();
        JPC = new javax.swing.JPanel();
        JPC_Welcome = new javax.swing.JPanel();
        JPC_Welcome_lbl = new javax.swing.JLabel();
        JPC_Dashboard = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        JPC_Dashboard_lbl_uname = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        JPC_Dashboard_tbl_discountedgames = new javax.swing.JTable();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        JPC_Dashboard_tbl_newgames = new javax.swing.JTable();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator7 = new javax.swing.JSeparator();
        jLabel38 = new javax.swing.JLabel();
        JPC_Dashboard_lbl_latestgame = new javax.swing.JLabel();
        JPC_GameList = new javax.swing.JPanel();
        jLabel46 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        JPC_GameList_tbl_gamelist = new javax.swing.JTable();
        jSeparator2 = new javax.swing.JSeparator();
        jTextField1 = new javax.swing.JTextField();
        JPC_GameList_btn_addcart = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        JPC_SearchGames = new javax.swing.JPanel();
        jLabel54 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        JPC_SearchGames_table = new javax.swing.JTable();
        jTextField2 = new javax.swing.JTextField();
        jRadioButton10 = new javax.swing.JRadioButton();
        jRadioButton11 = new javax.swing.JRadioButton();
        jRadioButton12 = new javax.swing.JRadioButton();
        jLabel30 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        JPC_AddGame = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel61 = new javax.swing.JLabel();
        JPC_AddGame_exist_txtbox_search = new javax.swing.JTextField();
        jScrollPane12 = new javax.swing.JScrollPane();
        JPC_AddGame_exist_table = new javax.swing.JTable();
        jLabel62 = new javax.swing.JLabel();
        JPC_AddGame_exist_jspin_stocks = new javax.swing.JSpinner();
        jSeparator16 = new javax.swing.JSeparator();
        JPC_AddGame_exist_btn_confirm = new javax.swing.JButton();
        JPC_AddGame_exist_btn_reset = new javax.swing.JButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jRadioButton6 = new javax.swing.JRadioButton();
        jLabel20 = new javax.swing.JLabel();
        JPC_AddGame_exist_lbl_id = new javax.swing.JLabel();
        JPC_EditGame = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        JPC_EditGame_lbl_id = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        JPC_EditGame_txtbox_name = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        JPC_EditGame_jcomb_genre = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        JPC_EditGame_txtbox_company = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JPC_EditGame_txtarea_description = new javax.swing.JTextArea();
        JPC_EditGame_lbl_picture = new javax.swing.JLabel();
        JPC_EditGame_btn_browse = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        JPC_EditGame_jcomb_status = new javax.swing.JComboBox<>();
        JPC_EditGame_btn_confirm = new javax.swing.JButton();
        JPC_EditGame_btn_reset = new javax.swing.JButton();
        JPC_EditGame_txtbox_datereleased = new javax.swing.JTextField();
        jScrollPane14 = new javax.swing.JScrollPane();
        JPC_EditGame_jtable = new javax.swing.JTable();
        jLabel45 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        JPC_API = new javax.swing.JPanel();
        JPC_Cart = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        JPC_Cart_btn_processcart = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        JPC_Cart_btn_removegame = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        JPC_Cart_lbl_purchaseid = new javax.swing.JLabel();
        JPC_Account = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        JPC_Account_txtbox_name = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        JPC_Account_jcombo_lang = new javax.swing.JComboBox<>();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        JPC_Account_btn_togglereset = new javax.swing.JButton();
        JPC_Account_check_resetpass = new javax.swing.JCheckBox();
        JPC_Account_btn_confirm = new javax.swing.JButton();
        JPC_Account_btn_reset = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle(bundle.getString("Cashier_GUI.title")); // NOI18N

        JPL.setBackground(new java.awt.Color(102, 102, 102));

        L_btn_Dashboard.setText(bundle.getString("Cashier_GUI.L_btn_Dashboard.text")); // NOI18N
        L_btn_Dashboard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                L_btn_DashboardActionPerformed(evt);
            }
        });

        L_btn_GamesList.setText(bundle.getString("Cashier_GUI.L_btn_GamesList.text")); // NOI18N
        L_btn_GamesList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                L_btn_GamesListActionPerformed(evt);
            }
        });

        L_btn_SearchGames.setText(bundle.getString("Cashier_GUI.L_btn_SearchGames.text")); // NOI18N
        L_btn_SearchGames.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                L_btn_SearchGamesActionPerformed(evt);
            }
        });

        L_btn_AddGame.setText(bundle.getString("Cashier_GUI.L_btn_AddGame.text")); // NOI18N
        L_btn_AddGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                L_btn_AddGameActionPerformed(evt);
            }
        });

        L_btn_EditGame.setText(bundle.getString("Cashier_GUI.L_btn_EditGame.text")); // NOI18N
        L_btn_EditGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                L_btn_EditGameActionPerformed(evt);
            }
        });

        L_btn_API.setText(bundle.getString("Cashier_GUI.L_btn_API.text")); // NOI18N
        L_btn_API.setEnabled(false);
        L_btn_API.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                L_btn_APIActionPerformed(evt);
            }
        });

        L_btn_Cart.setText(bundle.getString("Cashier_GUI.L_btn_Cart.text")); // NOI18N
        L_btn_Cart.setEnabled(false);
        L_btn_Cart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                L_btn_CartActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout JPLLayout = new javax.swing.GroupLayout(JPL);
        JPL.setLayout(JPLLayout);
        JPLLayout.setHorizontalGroup(
            JPLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPLLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JPLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(L_btn_Cart)
                    .addComponent(L_btn_API, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(L_btn_EditGame, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(L_btn_AddGame, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(L_btn_SearchGames, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(L_btn_GamesList, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(L_btn_Dashboard, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        JPLLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {L_btn_API, L_btn_AddGame, L_btn_Cart, L_btn_Dashboard, L_btn_EditGame, L_btn_GamesList, L_btn_SearchGames});

        JPLLayout.setVerticalGroup(
            JPLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPLLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(L_btn_Dashboard, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                .addGap(33, 33, 33)
                .addComponent(L_btn_GamesList, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                .addGap(29, 29, 29)
                .addComponent(L_btn_SearchGames, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                .addGap(37, 37, 37)
                .addComponent(L_btn_AddGame, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                .addGap(37, 37, 37)
                .addComponent(L_btn_EditGame, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                .addGap(38, 38, 38)
                .addComponent(L_btn_API, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                .addGap(33, 33, 33)
                .addComponent(L_btn_Cart, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                .addGap(28, 28, 28))
        );

        getContentPane().add(JPL, java.awt.BorderLayout.LINE_START);

        JPR.setBackground(new java.awt.Color(153, 153, 153));

        btn_logout.setText(bundle.getString("Cashier_GUI.btn_logout.text")); // NOI18N
        btn_logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_logoutActionPerformed(evt);
            }
        });

        btn_account.setText(bundle.getString("Cashier_GUI.btn_account.text")); // NOI18N
        btn_account.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_accountActionPerformed(evt);
            }
        });

        btn_exit.setText(bundle.getString("Cashier_GUI.btn_exit.text")); // NOI18N
        btn_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_exitActionPerformed(evt);
            }
        });

        lbl_hour.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        lbl_hour.setForeground(new java.awt.Color(153, 0, 51));
        lbl_hour.setText(bundle.getString("Cashier_GUI.lbl_hour.text")); // NOI18N

        lbl_minute.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        lbl_minute.setForeground(new java.awt.Color(153, 0, 51));
        lbl_minute.setText(bundle.getString("Cashier_GUI.lbl_minute.text")); // NOI18N

        lbl_second.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        lbl_second.setForeground(new java.awt.Color(153, 0, 51));
        lbl_second.setText(bundle.getString("Cashier_GUI.lbl_second.text")); // NOI18N

        lbl_a.setForeground(new java.awt.Color(153, 0, 51));
        lbl_a.setText(bundle.getString("Cashier_GUI.lbl_a.text")); // NOI18N

        javax.swing.GroupLayout JPRLayout = new javax.swing.GroupLayout(JPR);
        JPR.setLayout(JPRLayout);
        JPRLayout.setHorizontalGroup(
            JPRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPRLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JPRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_account, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_exit, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_logout, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(JPRLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(JPRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(JPRLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(lbl_a))
                            .addGroup(JPRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lbl_minute)
                                .addComponent(lbl_second)
                                .addComponent(lbl_hour)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        JPRLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lbl_hour, lbl_minute, lbl_second});

        JPRLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btn_account, btn_exit, btn_logout});

        JPRLayout.setVerticalGroup(
            JPRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPRLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(lbl_hour)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_minute)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_second)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_a)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 278, Short.MAX_VALUE)
                .addComponent(btn_logout, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(btn_account, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_exit)
                .addGap(23, 23, 23))
        );

        JPRLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btn_account, btn_exit, btn_logout});

        JPRLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lbl_hour, lbl_minute, lbl_second});

        getContentPane().add(JPR, java.awt.BorderLayout.LINE_END);

        JPC.setLayout(new java.awt.CardLayout());

        JPC_Welcome_lbl.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        JPC_Welcome_lbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        JPC_Welcome_lbl.setText(bundle.getString("Cashier_GUI.JPC_Welcome_lbl.text")); // NOI18N

        javax.swing.GroupLayout JPC_WelcomeLayout = new javax.swing.GroupLayout(JPC_Welcome);
        JPC_Welcome.setLayout(JPC_WelcomeLayout);
        JPC_WelcomeLayout.setHorizontalGroup(
            JPC_WelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPC_WelcomeLayout.createSequentialGroup()
                .addContainerGap(246, Short.MAX_VALUE)
                .addComponent(JPC_Welcome_lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(308, Short.MAX_VALUE))
        );
        JPC_WelcomeLayout.setVerticalGroup(
            JPC_WelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPC_WelcomeLayout.createSequentialGroup()
                .addGap(196, 196, 196)
                .addComponent(JPC_Welcome_lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(448, 448, 448))
        );

        JPC.add(JPC_Welcome, "Welcome");

        jLabel34.setText(bundle.getString("Cashier_GUI.jLabel34.text")); // NOI18N

        JPC_Dashboard_lbl_uname.setText(bundle.getString("Cashier_GUI.JPC_Dashboard_lbl_uname.text")); // NOI18N

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, gamesList, JPC_Dashboard_tbl_discountedgames);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${id}"));
        columnBinding.setColumnName("Id");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${name}"));
        columnBinding.setColumnName("Name");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${company}"));
        columnBinding.setColumnName("Company");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${genre}"));
        columnBinding.setColumnName("Genre");
        columnBinding.setColumnClass(GUI.Genre.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${retailprice}"));
        columnBinding.setColumnName("Retailprice");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${soldamount}"));
        columnBinding.setColumnName("Soldamount");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${datereleased}"));
        columnBinding.setColumnName("Datereleased");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${dateadded}"));
        columnBinding.setColumnName("Dateadded");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${stocks}"));
        columnBinding.setColumnName("Stocks");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${discount}"));
        columnBinding.setColumnName("Discount");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${status}"));
        columnBinding.setColumnName("Status");
        columnBinding.setColumnClass(GUI.Status.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane3.setViewportView(JPC_Dashboard_tbl_discountedgames);

        jLabel36.setText(bundle.getString("Cashier_GUI.jLabel36.text")); // NOI18N

        jLabel37.setText(bundle.getString("Cashier_GUI.jLabel37.text")); // NOI18N

        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, gamesList, JPC_Dashboard_tbl_newgames);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${id}"));
        columnBinding.setColumnName("Id");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${name}"));
        columnBinding.setColumnName("Name");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${company}"));
        columnBinding.setColumnName("Company");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${stocks}"));
        columnBinding.setColumnName("Stocks");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${dateadded}"));
        columnBinding.setColumnName("Dateadded");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${genre}"));
        columnBinding.setColumnName("Genre");
        columnBinding.setColumnClass(GUI.Genre.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${retailprice}"));
        columnBinding.setColumnName("Retailprice");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${discount}"));
        columnBinding.setColumnName("Discount");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${soldamount}"));
        columnBinding.setColumnName("Soldamount");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane4.setViewportView(JPC_Dashboard_tbl_newgames);

        jLabel38.setText(bundle.getString("Cashier_GUI.jLabel38.text")); // NOI18N

        JPC_Dashboard_lbl_latestgame.setText(bundle.getString("Cashier_GUI.JPC_Dashboard_lbl_latestgame.text")); // NOI18N

        javax.swing.GroupLayout JPC_DashboardLayout = new javax.swing.GroupLayout(JPC_Dashboard);
        JPC_Dashboard.setLayout(JPC_DashboardLayout);
        JPC_DashboardLayout.setHorizontalGroup(
            JPC_DashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPC_DashboardLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(JPC_DashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JPC_DashboardLayout.createSequentialGroup()
                        .addComponent(jLabel37)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(JPC_DashboardLayout.createSequentialGroup()
                        .addGroup(JPC_DashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator6)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 977, Short.MAX_VALUE)
                            .addComponent(jSeparator7, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, JPC_DashboardLayout.createSequentialGroup()
                                .addComponent(jLabel34)
                                .addGap(18, 18, 18)
                                .addComponent(JPC_Dashboard_lbl_uname)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel38)
                                .addGap(18, 18, 18)
                                .addComponent(JPC_Dashboard_lbl_latestgame)
                                .addGap(182, 182, 182))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, JPC_DashboardLayout.createSequentialGroup()
                                .addComponent(jLabel36)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(34, 34, 34))))
        );
        JPC_DashboardLayout.setVerticalGroup(
            JPC_DashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPC_DashboardLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(JPC_DashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(JPC_Dashboard_lbl_uname)
                    .addComponent(jLabel38)
                    .addComponent(JPC_Dashboard_lbl_latestgame))
                .addGap(18, 18, 18)
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jLabel36)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                .addGap(53, 53, 53)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(jLabel37)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                .addGap(70, 70, 70))
        );

        JPC.add(JPC_Dashboard, "Dashboard");

        jLabel46.setText(bundle.getString("Cashier_GUI.jLabel46.text")); // NOI18N

        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, gamesList, JPC_GameList_tbl_gamelist);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${id}"));
        columnBinding.setColumnName("Id");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${name}"));
        columnBinding.setColumnName("Name");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${company}"));
        columnBinding.setColumnName("Company");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${genre}"));
        columnBinding.setColumnName("Genre");
        columnBinding.setColumnClass(GUI.Genre.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${discount}"));
        columnBinding.setColumnName("Discount");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${retailprice}"));
        columnBinding.setColumnName("Retailprice");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${status}"));
        columnBinding.setColumnName("Status");
        columnBinding.setColumnClass(GUI.Status.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${stocks}"));
        columnBinding.setColumnName("Stocks");
        columnBinding.setColumnClass(Integer.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane5.setViewportView(JPC_GameList_tbl_gamelist);

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });

        JPC_GameList_btn_addcart.setText(bundle.getString("Cashier_GUI.JPC_GameList_btn_addcart.text")); // NOI18N
        JPC_GameList_btn_addcart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JPC_GameList_btn_addcartActionPerformed(evt);
            }
        });

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, JPC_GameList_tbl_gamelist, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.id}"), jLabel29, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout JPC_GameListLayout = new javax.swing.GroupLayout(JPC_GameList);
        JPC_GameList.setLayout(JPC_GameListLayout);
        JPC_GameListLayout.setHorizontalGroup(
            JPC_GameListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPC_GameListLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JPC_GameListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator2)
                    .addGroup(JPC_GameListLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel46)
                        .addGap(33, 33, 33)
                        .addComponent(jTextField1))
                    .addGroup(JPC_GameListLayout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addComponent(jLabel29)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 304, Short.MAX_VALUE)
                        .addComponent(JPC_GameList_btn_addcart, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 472, Short.MAX_VALUE)))
                .addContainerGap())
        );
        JPC_GameListLayout.setVerticalGroup(
            JPC_GameListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPC_GameListLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(JPC_GameListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel46)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(JPC_GameListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JPC_GameList_btn_addcart, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29))
                .addGap(19, 19, 19))
        );

        JPC.add(JPC_GameList, "Sales");

        jLabel54.setText(bundle.getString("Cashier_GUI.jLabel54.text")); // NOI18N

        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, gamesList, JPC_SearchGames_table);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${id}"));
        columnBinding.setColumnName("Id");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${name}"));
        columnBinding.setColumnName("Name");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${genre}"));
        columnBinding.setColumnName("Genre");
        columnBinding.setColumnClass(GUI.Genre.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${status}"));
        columnBinding.setColumnName("Status");
        columnBinding.setColumnClass(GUI.Status.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${stocks}"));
        columnBinding.setColumnName("Stocks");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${company}"));
        columnBinding.setColumnName("Company");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${dateadded}"));
        columnBinding.setColumnName("Dateadded");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${datereleased}"));
        columnBinding.setColumnName("Datereleased");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${discount}"));
        columnBinding.setColumnName("Discount");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${retailprice}"));
        columnBinding.setColumnName("Retailprice");
        columnBinding.setColumnClass(Integer.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane7.setViewportView(JPC_SearchGames_table);

        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField2KeyReleased(evt);
            }
        });

        SearchGameSearchGroup.add(jRadioButton10);
        jRadioButton10.setSelected(true);
        jRadioButton10.setText(bundle.getString("Cashier_GUI.jRadioButton10.text")); // NOI18N

        SearchGameSearchGroup.add(jRadioButton11);
        jRadioButton11.setText(bundle.getString("Cashier_GUI.jRadioButton11.text")); // NOI18N

        SearchGameSearchGroup.add(jRadioButton12);
        jRadioButton12.setText(bundle.getString("Cashier_GUI.jRadioButton12.text")); // NOI18N

        jLabel30.setText(bundle.getString("Cashier_GUI.jLabel30.text")); // NOI18N

        org.jdesktop.swingbinding.JComboBoxBinding jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, statusList, jComboBox1);
        bindingGroup.addBinding(jComboBoxBinding);

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout JPC_SearchGamesLayout = new javax.swing.GroupLayout(JPC_SearchGames);
        JPC_SearchGames.setLayout(JPC_SearchGamesLayout);
        JPC_SearchGamesLayout.setHorizontalGroup(
            JPC_SearchGamesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPC_SearchGamesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JPC_SearchGamesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 1016, Short.MAX_VALUE)
                    .addGroup(JPC_SearchGamesLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(JPC_SearchGamesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(JPC_SearchGamesLayout.createSequentialGroup()
                                .addComponent(jLabel30)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(JPC_SearchGamesLayout.createSequentialGroup()
                                .addComponent(jLabel54)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField2)))
                        .addGap(32, 32, 32)
                        .addComponent(jRadioButton10)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButton11)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButton12)
                        .addGap(107, 107, 107)))
                .addContainerGap())
        );
        JPC_SearchGamesLayout.setVerticalGroup(
            JPC_SearchGamesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPC_SearchGamesLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(JPC_SearchGamesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel54)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButton10)
                    .addComponent(jRadioButton11)
                    .addComponent(jRadioButton12))
                .addGap(18, 18, 18)
                .addGroup(JPC_SearchGamesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 573, Short.MAX_VALUE)
                .addContainerGap())
        );

        JPC.add(JPC_SearchGames, "Stocks");

        jLabel61.setText(bundle.getString("Cashier_GUI.jLabel61.text")); // NOI18N

        JPC_AddGame_exist_txtbox_search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                JPC_AddGame_exist_txtbox_searchKeyReleased(evt);
            }
        });

        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, gamesList, JPC_AddGame_exist_table);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${id}"));
        columnBinding.setColumnName("Id");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${name}"));
        columnBinding.setColumnName("Name");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${company}"));
        columnBinding.setColumnName("Company");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${genre}"));
        columnBinding.setColumnName("Genre");
        columnBinding.setColumnClass(GUI.Genre.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${status}"));
        columnBinding.setColumnName("Status");
        columnBinding.setColumnClass(GUI.Status.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${stocks}"));
        columnBinding.setColumnName("Stocks");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane12.setViewportView(JPC_AddGame_exist_table);

        jLabel62.setText(bundle.getString("Cashier_GUI.jLabel62.text")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, JPC_AddGame_exist_table, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.stocks}"), JPC_AddGame_exist_jspin_stocks, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);

        JPC_AddGame_exist_btn_confirm.setText(bundle.getString("Cashier_GUI.JPC_AddGame_exist_btn_confirm.text")); // NOI18N
        JPC_AddGame_exist_btn_confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JPC_AddGame_exist_btn_confirmActionPerformed(evt);
            }
        });

        JPC_AddGame_exist_btn_reset.setText(bundle.getString("Cashier_GUI.JPC_AddGame_exist_btn_reset.text")); // NOI18N
        JPC_AddGame_exist_btn_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JPC_AddGame_exist_btn_resetActionPerformed(evt);
            }
        });

        AddExistingGameSearchGroup.add(jRadioButton4);
        jRadioButton4.setSelected(true);
        jRadioButton4.setText(bundle.getString("Cashier_GUI.jRadioButton4.text")); // NOI18N

        AddExistingGameSearchGroup.add(jRadioButton5);
        jRadioButton5.setText(bundle.getString("Cashier_GUI.jRadioButton5.text")); // NOI18N

        AddExistingGameSearchGroup.add(jRadioButton6);
        jRadioButton6.setText(bundle.getString("Cashier_GUI.jRadioButton6.text")); // NOI18N

        jLabel20.setText(bundle.getString("Cashier_GUI.jLabel20.text")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, JPC_AddGame_exist_table, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.id}"), JPC_AddGame_exist_lbl_id, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane12)
                .addContainerGap())
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(jSeparator16)
                .addContainerGap())
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(JPC_AddGame_exist_btn_confirm, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(JPC_AddGame_exist_btn_reset))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel62)
                        .addGap(88, 88, 88)
                        .addComponent(JPC_AddGame_exist_jspin_stocks, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabel61)
                        .addGap(18, 18, 18)
                        .addComponent(JPC_AddGame_exist_txtbox_search))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(204, 204, 204)
                        .addComponent(jLabel20)
                        .addGap(18, 18, 18)
                        .addComponent(JPC_AddGame_exist_lbl_id)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 442, Short.MAX_VALUE)
                        .addComponent(jRadioButton4)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButton5)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButton6)))
                .addGap(75, 75, 75))
        );

        jPanel8Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {JPC_AddGame_exist_btn_confirm, JPC_AddGame_exist_btn_reset});

        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel61)
                    .addComponent(JPC_AddGame_exist_txtbox_search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton4)
                    .addComponent(jRadioButton5)
                    .addComponent(jRadioButton6)
                    .addComponent(jLabel20)
                    .addComponent(JPC_AddGame_exist_lbl_id))
                .addGap(19, 19, 19)
                .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                .addGap(58, 58, 58)
                .addComponent(jSeparator16, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JPC_AddGame_exist_jspin_stocks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel62))
                .addGap(55, 55, 55)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(JPC_AddGame_exist_btn_reset)
                    .addComponent(JPC_AddGame_exist_btn_confirm, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(69, 69, 69))
        );

        jPanel8Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {JPC_AddGame_exist_btn_confirm, JPC_AddGame_exist_btn_reset});

        javax.swing.GroupLayout JPC_AddGameLayout = new javax.swing.GroupLayout(JPC_AddGame);
        JPC_AddGame.setLayout(JPC_AddGameLayout);
        JPC_AddGameLayout.setHorizontalGroup(
            JPC_AddGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPC_AddGameLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(13, 13, 13))
        );
        JPC_AddGameLayout.setVerticalGroup(
            JPC_AddGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPC_AddGameLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(25, 25, 25))
        );

        JPC.add(JPC_AddGame, "AddGame");

        jPanel9.setBackground(new java.awt.Color(102, 102, 102));

        jLabel31.setText(bundle.getString("Cashier_GUI.jLabel31.text")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, JPC_EditGame_jtable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.id}"), JPC_EditGame_lbl_id, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jLabel2.setText(bundle.getString("Cashier_GUI.jLabel2.text")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, JPC_EditGame_jtable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.name}"), JPC_EditGame_txtbox_name, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jLabel4.setText(bundle.getString("Cashier_GUI.jLabel4.text")); // NOI18N

        jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, genreList, JPC_EditGame_jcomb_genre);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, JPC_EditGame_jtable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.genre}"), JPC_EditGame_jcomb_genre, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        jLabel5.setText(bundle.getString("Cashier_GUI.jLabel5.text")); // NOI18N

        jLabel6.setText(bundle.getString("Cashier_GUI.jLabel6.text")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, JPC_EditGame_jtable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.company}"), JPC_EditGame_txtbox_company, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jLabel7.setText(bundle.getString("Cashier_GUI.jLabel7.text")); // NOI18N

        JPC_EditGame_txtarea_description.setColumns(20);
        JPC_EditGame_txtarea_description.setLineWrap(true);
        JPC_EditGame_txtarea_description.setRows(5);
        JPC_EditGame_txtarea_description.setWrapStyleWord(true);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, JPC_EditGame_jtable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.description}"), JPC_EditGame_txtarea_description, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jScrollPane1.setViewportView(JPC_EditGame_txtarea_description);

        JPC_EditGame_lbl_picture.setPreferredSize(new java.awt.Dimension(100, 100));

        JPC_EditGame_btn_browse.setText(bundle.getString("Cashier_GUI.JPC_EditGame_btn_browse.text")); // NOI18N
        JPC_EditGame_btn_browse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JPC_EditGame_btn_browseActionPerformed(evt);
            }
        });

        jLabel12.setText(bundle.getString("Cashier_GUI.jLabel12.text")); // NOI18N

        jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, statusList, JPC_EditGame_jcomb_status);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, JPC_EditGame_jtable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.status}"), JPC_EditGame_jcomb_status, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        JPC_EditGame_btn_confirm.setText(bundle.getString("Cashier_GUI.JPC_EditGame_btn_confirm.text")); // NOI18N
        JPC_EditGame_btn_confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JPC_EditGame_btn_confirmActionPerformed(evt);
            }
        });

        JPC_EditGame_btn_reset.setText(bundle.getString("Cashier_GUI.JPC_EditGame_btn_reset.text")); // NOI18N
        JPC_EditGame_btn_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JPC_EditGame_btn_resetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel31)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addGap(38, 38, 38)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JPC_EditGame_txtbox_name, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(JPC_EditGame_jcomb_genre, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(JPC_EditGame_txtbox_datereleased, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(JPC_EditGame_txtbox_company)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(JPC_EditGame_lbl_id)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(92, 92, 92)
                        .addComponent(JPC_EditGame_jcomb_status, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(JPC_EditGame_lbl_picture, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(JPC_EditGame_btn_browse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)))
                .addGap(49, 49, 49))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(JPC_EditGame_btn_confirm, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(JPC_EditGame_btn_reset, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel9Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {JPC_EditGame_btn_confirm, JPC_EditGame_btn_reset});

        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel31))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(JPC_EditGame_lbl_id)))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(JPC_EditGame_txtbox_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(JPC_EditGame_jcomb_genre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(JPC_EditGame_txtbox_datereleased, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JPC_EditGame_txtbox_company, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addComponent(JPC_EditGame_lbl_picture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JPC_EditGame_btn_browse)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(JPC_EditGame_jcomb_status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JPC_EditGame_btn_confirm, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JPC_EditGame_btn_reset))
                .addContainerGap())
        );

        jPanel9Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {JPC_EditGame_btn_confirm, JPC_EditGame_btn_reset});

        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, gamesList, JPC_EditGame_jtable);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${id}"));
        columnBinding.setColumnName("Id");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${name}"));
        columnBinding.setColumnName("Name");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${retailprice}"));
        columnBinding.setColumnName("Retailprice");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${discount}"));
        columnBinding.setColumnName("Discount");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${stocks}"));
        columnBinding.setColumnName("Stocks");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${status}"));
        columnBinding.setColumnName("Status");
        columnBinding.setColumnClass(GUI.Status.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        JPC_EditGame_jtable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JPC_EditGame_jtableMouseClicked(evt);
            }
        });
        jScrollPane14.setViewportView(JPC_EditGame_jtable);

        jLabel45.setText(bundle.getString("Cashier_GUI.jLabel45.text")); // NOI18N

        jTextField5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField5KeyReleased(evt);
            }
        });

        EditGameSearchGroup.add(jRadioButton1);
        jRadioButton1.setText(bundle.getString("Cashier_GUI.jRadioButton1.text")); // NOI18N

        EditGameSearchGroup.add(jRadioButton2);
        jRadioButton2.setText(bundle.getString("Cashier_GUI.jRadioButton2.text")); // NOI18N

        EditGameSearchGroup.add(jRadioButton3);
        jRadioButton3.setSelected(true);
        jRadioButton3.setText(bundle.getString("Cashier_GUI.jRadioButton3.text")); // NOI18N

        javax.swing.GroupLayout JPC_EditGameLayout = new javax.swing.GroupLayout(JPC_EditGame);
        JPC_EditGame.setLayout(JPC_EditGameLayout);
        JPC_EditGameLayout.setHorizontalGroup(
            JPC_EditGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPC_EditGameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(JPC_EditGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane14, javax.swing.GroupLayout.DEFAULT_SIZE, 568, Short.MAX_VALUE)
                    .addGroup(JPC_EditGameLayout.createSequentialGroup()
                        .addComponent(jLabel45)
                        .addGap(18, 18, 18)
                        .addGroup(JPC_EditGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPC_EditGameLayout.createSequentialGroup()
                                .addComponent(jTextField5)
                                .addGap(18, 18, 18)
                                .addComponent(jRadioButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRadioButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRadioButton3)))))
                .addContainerGap())
        );
        JPC_EditGameLayout.setVerticalGroup(
            JPC_EditGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPC_EditGameLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(JPC_EditGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(JPC_EditGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel45)
                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jRadioButton1)
                        .addComponent(jRadioButton2)
                        .addComponent(jRadioButton3))
                    .addComponent(jLabel3)))
            .addGroup(JPC_EditGameLayout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(JPC_EditGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane14, javax.swing.GroupLayout.DEFAULT_SIZE, 609, Short.MAX_VALUE))
                .addGap(22, 22, 22))
        );

        JPC.add(JPC_EditGame, "EditGame");

        javax.swing.GroupLayout JPC_APILayout = new javax.swing.GroupLayout(JPC_API);
        JPC_API.setLayout(JPC_APILayout);
        JPC_APILayout.setHorizontalGroup(
            JPC_APILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1036, Short.MAX_VALUE)
        );
        JPC_APILayout.setVerticalGroup(
            JPC_APILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 702, Short.MAX_VALUE)
        );

        JPC.add(JPC_API, "DeleteGame");

        JPC_Cart.setEnabled(false);

        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, purchasesList, jTable1);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${id}"));
        columnBinding.setColumnName("Id");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${gameid}"));
        columnBinding.setColumnName("Gameid");
        columnBinding.setColumnClass(GUI.Games.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${quantity}"));
        columnBinding.setColumnName("Quantity");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane2.setViewportView(jTable1);

        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, gamesList, jTable2);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${id}"));
        columnBinding.setColumnName("Id");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${name}"));
        columnBinding.setColumnName("Name");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${company}"));
        columnBinding.setColumnName("Company");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${genre}"));
        columnBinding.setColumnName("Genre");
        columnBinding.setColumnClass(GUI.Genre.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${stocks}"));
        columnBinding.setColumnName("Stocks");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${retailprice}"));
        columnBinding.setColumnName("Retailprice");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${discount}"));
        columnBinding.setColumnName("Discount");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane6.setViewportView(jTable2);

        jLabel9.setText(bundle.getString("Cashier_GUI.jLabel9.text")); // NOI18N

        jTextField4.setText(bundle.getString("Cashier_GUI.jTextField4.text")); // NOI18N

        jLabel10.setText(bundle.getString("Cashier_GUI.jLabel10.text")); // NOI18N

        jTextField6.setText(bundle.getString("Cashier_GUI.jTextField6.text")); // NOI18N

        JPC_Cart_btn_processcart.setText(bundle.getString("Cashier_GUI.JPC_Cart_btn_processcart.text")); // NOI18N
        JPC_Cart_btn_processcart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JPC_Cart_btn_processcartActionPerformed(evt);
            }
        });

        jLabel11.setText(bundle.getString("Cashier_GUI.jLabel11.text")); // NOI18N

        jLabel13.setText(bundle.getString("Cashier_GUI.jLabel13.text")); // NOI18N

        JPC_Cart_btn_removegame.setText(bundle.getString("Cashier_GUI.JPC_Cart_btn_removegame.text")); // NOI18N
        JPC_Cart_btn_removegame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JPC_Cart_btn_removegameActionPerformed(evt);
            }
        });

        jLabel14.setText(bundle.getString("Cashier_GUI.jLabel14.text")); // NOI18N

        jLabel15.setText(bundle.getString("Cashier_GUI.jLabel15.text")); // NOI18N

        jLabel16.setText(bundle.getString("Cashier_GUI.jLabel16.text")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, jTable1, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.id}"), JPC_Cart_lbl_purchaseid, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout JPC_CartLayout = new javax.swing.GroupLayout(JPC_Cart);
        JPC_Cart.setLayout(JPC_CartLayout);
        JPC_CartLayout.setHorizontalGroup(
            JPC_CartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPC_CartLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JPC_CartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JPC_CartLayout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addGap(29, 29, 29))
                    .addGroup(JPC_CartLayout.createSequentialGroup()
                        .addGroup(JPC_CartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(JPC_CartLayout.createSequentialGroup()
                                .addGroup(JPC_CartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel11))
                                .addGap(18, 18, 18)
                                .addGroup(JPC_CartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addComponent(jTextField4)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, JPC_CartLayout.createSequentialGroup()
                                .addGroup(JPC_CartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel14))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(JPC_CartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15)
                                    .addComponent(jTextField6, javax.swing.GroupLayout.DEFAULT_SIZE, 391, Short.MAX_VALUE))))
                        .addGap(70, 70, 70))
                    .addGroup(JPC_CartLayout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(18, 18, 18)
                        .addComponent(JPC_Cart_lbl_purchaseid)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(JPC_CartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JPC_Cart_btn_processcart, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JPC_Cart_btn_removegame, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(54, 54, 54)))
                .addComponent(jScrollPane6)
                .addContainerGap())
        );
        JPC_CartLayout.setVerticalGroup(
            JPC_CartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPC_CartLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JPC_CartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(JPC_CartLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addGroup(JPC_CartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel13))
                        .addGap(26, 26, 26)
                        .addGroup(JPC_CartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(JPC_CartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                        .addGroup(JPC_CartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15))
                        .addGroup(JPC_CartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(JPC_CartLayout.createSequentialGroup()
                                .addGap(71, 71, 71)
                                .addGroup(JPC_CartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel16)
                                    .addComponent(JPC_Cart_lbl_purchaseid))
                                .addGap(45, 45, 45))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPC_CartLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(JPC_Cart_btn_processcart, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(JPC_Cart_btn_removegame)
                                .addGap(12, 12, 12))))
                    .addComponent(jScrollPane6))
                .addContainerGap())
        );

        JPC_CartLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {JPC_Cart_btn_processcart, JPC_Cart_btn_removegame});

        JPC.add(JPC_Cart, "GenerateReports");

        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel26.setText(bundle.getString("Cashier_GUI.jLabel26.text")); // NOI18N

        JPC_Account_txtbox_name.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        JPC_Account_txtbox_name.setText(bundle.getString("Cashier_GUI.JPC_Account_txtbox_name.text")); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText(bundle.getString("Cashier_GUI.jLabel1.text")); // NOI18N

        JPC_Account_jcombo_lang.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, languageList, JPC_Account_jcombo_lang);
        bindingGroup.addBinding(jComboBoxBinding);

        jLabel27.setText(bundle.getString("Cashier_GUI.jLabel27.text")); // NOI18N

        jLabel28.setText(bundle.getString("Cashier_GUI.jLabel28.text")); // NOI18N

        JPC_Account_btn_togglereset.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        JPC_Account_btn_togglereset.setText(bundle.getString("Cashier_GUI.JPC_Account_btn_togglereset.text")); // NOI18N
        JPC_Account_btn_togglereset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JPC_Account_btn_toggleresetActionPerformed(evt);
            }
        });

        JPC_Account_check_resetpass.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        JPC_Account_check_resetpass.setText(bundle.getString("Cashier_GUI.JPC_Account_check_resetpass.text")); // NOI18N
        JPC_Account_check_resetpass.setEnabled(false);

        JPC_Account_btn_confirm.setText(bundle.getString("Cashier_GUI.JPC_Account_btn_confirm.text")); // NOI18N
        JPC_Account_btn_confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JPC_Account_btn_confirmActionPerformed(evt);
            }
        });

        JPC_Account_btn_reset.setText(bundle.getString("Cashier_GUI.JPC_Account_btn_reset.text")); // NOI18N
        JPC_Account_btn_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JPC_Account_btn_resetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout JPC_AccountLayout = new javax.swing.GroupLayout(JPC_Account);
        JPC_Account.setLayout(JPC_AccountLayout);
        JPC_AccountLayout.setHorizontalGroup(
            JPC_AccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPC_AccountLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel27)
                .addGap(18, 18, 18)
                .addComponent(jLabel28)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPC_AccountLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator4)
                .addContainerGap())
            .addGroup(JPC_AccountLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(JPC_AccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JPC_AccountLayout.createSequentialGroup()
                        .addComponent(JPC_Account_btn_togglereset, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(JPC_Account_check_resetpass))
                    .addGroup(JPC_AccountLayout.createSequentialGroup()
                        .addGroup(JPC_AccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel26)
                            .addComponent(jLabel1))
                        .addGap(172, 172, 172)
                        .addGroup(JPC_AccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(JPC_Account_txtbox_name, javax.swing.GroupLayout.DEFAULT_SIZE, 649, Short.MAX_VALUE)
                            .addComponent(JPC_Account_jcombo_lang, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(JPC_AccountLayout.createSequentialGroup()
                        .addComponent(JPC_Account_btn_confirm, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(83, 83, 83)
                        .addComponent(JPC_Account_btn_reset)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        JPC_AccountLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {JPC_Account_btn_confirm, JPC_Account_btn_reset});

        JPC_AccountLayout.setVerticalGroup(
            JPC_AccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPC_AccountLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(JPC_AccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(jLabel28))
                .addGap(98, 98, 98)
                .addGroup(JPC_AccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(JPC_Account_txtbox_name, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                .addGroup(JPC_AccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(JPC_Account_jcombo_lang, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                .addGroup(JPC_AccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JPC_Account_btn_togglereset, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JPC_Account_check_resetpass))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 115, Short.MAX_VALUE)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(92, 92, 92)
                .addGroup(JPC_AccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JPC_Account_btn_reset)
                    .addComponent(JPC_Account_btn_confirm, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );

        JPC_AccountLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {JPC_Account_btn_confirm, JPC_Account_btn_reset});

        JPC.add(JPC_Account, "Account");

        getContentPane().add(JPC, java.awt.BorderLayout.CENTER);

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_logoutActionPerformed
        new Login_GUI().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_logoutActionPerformed

    private void L_btn_DashboardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_L_btn_DashboardActionPerformed
        cLayout.show(JPC, "Dashboard");

        try {

            JPC_Dashboard_lbl_uname.setText(usernameglobal);

            gamesList.clear();
            gamesList = gamesQuery.getResultList();
            Games g = gamesList.get(gamesList.size() - 1);
            JPC_Dashboard_lbl_latestgame.setText(g.getName());

            //New Games Table
            Query qry = GameSellShopPUEntityManager.createQuery("SELECT g FROM Games g WHERE g.status = :status");
            qry.setParameter("status", new Status(1));

            gamesList.clear();
            gamesList = gamesQuery.getResultList();
            List newgamesstock;
            newgamesstock = gamesList;
            newgamesstock.clear();
            newgamesstock = qry.getResultList();
            RefreshNewGamestable(newgamesstock);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Failed to Load Table : Hot Games Least Stocks", "Error : Failed to Load Table", JOptionPane.ERROR_MESSAGE);
            logr.log(Level.SEVERE, "Failed to Load Table : " + ex.getMessage());
        }

        try {
            //Discounted Games Table
            Query qry2 = GameSellShopPUEntityManager.createQuery("SELECT g FROM Games g WHERE g.discount > :discount");

            qry2.setParameter("discount", 0);

            gamesList.clear();
            gamesList = gamesQuery.getResultList();
            List discountedgames;
            discountedgames = gamesList;
            discountedgames.clear();
            discountedgames = qry2.getResultList();
            RefreshDiscountedGamestable(discountedgames);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Failed to Load Table : Least Stocks", "Error : Failed to Load Table", JOptionPane.ERROR_MESSAGE);
            logr.log(Level.SEVERE, "Failed to Load Table : " + ex.getMessage());
        }
    }//GEN-LAST:event_L_btn_DashboardActionPerformed

    private void L_btn_GamesListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_L_btn_GamesListActionPerformed
        cLayout.show(JPC, "Sales");
        try {
            Query qry = GameSellShopPUEntityManager.createQuery("SELECT g FROM Games g WHERE g.stocks != :stocks AND g.status != :status");
            qry.setParameter("stocks", 0);
            qry.setParameter("status", new Status(4));
            gamesList.clear();
            gamesList = qry.getResultList();

            RefreshGameListtable(gamesList);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Could not Load Games List", "Error : Failed to Load Games List", JOptionPane.ERROR_MESSAGE);
            logr.log(Level.SEVERE, "Failed to load Games List : " + ex.getMessage());
        }

    }//GEN-LAST:event_L_btn_GamesListActionPerformed

    private void L_btn_SearchGamesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_L_btn_SearchGamesActionPerformed
        cLayout.show(JPC, "Stocks");

        try {
            Query qry = GameSellShopPUEntityManager.createQuery("SELECT g FROM Games g WHERE g.stocks != :stocks AND g.status != :status");
            qry.setParameter("stocks", 0);
            qry.setParameter("status", new Status(4));
            gamesList.clear();
            gamesList = qry.getResultList();
            RefreshGameSearchListtable(gamesList);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Failed to Load Search Games. Please try again later.", "Error : Failed to Load Search Game", JOptionPane.ERROR_MESSAGE);
            logr.log(Level.SEVERE, "Failed to Load Search Game : " + ex.getMessage());
        }
    }//GEN-LAST:event_L_btn_SearchGamesActionPerformed

    private void L_btn_AddGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_L_btn_AddGameActionPerformed
        cLayout.show(JPC, "AddGame");

        gamesList.clear();
        gamesList = gamesQuery.getResultList();
        RefreshExistingGameTable(gamesList);
    }//GEN-LAST:event_L_btn_AddGameActionPerformed

    private void L_btn_EditGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_L_btn_EditGameActionPerformed
        cLayout.show(JPC, "EditGame");

        gamesList.clear();
        gamesList = gamesQuery.getResultList();
        RefreshEditGameTable(gamesList);
    }//GEN-LAST:event_L_btn_EditGameActionPerformed

    private void L_btn_APIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_L_btn_APIActionPerformed
        cLayout.show(JPC, "DeleteGame");
    }//GEN-LAST:event_L_btn_APIActionPerformed

    private void L_btn_CartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_L_btn_CartActionPerformed
        cLayout.show(JPC, "GenerateReports");

        try {
            ordersList.clear();
            ordersList = ordersQuery.getResultList();
            Orders o = ordersList.get(ordersList.size() - 1);
            jLabel13.setText("" + o.getId());

            Query qry = GameSellShopPUEntityManager.createQuery("SELECT p FROM Purchases p WHERE p.orderid = :orderid");
            qry.setParameter("orderid", o);
            purchasesList.clear();
            purchasesList = qry.getResultList();
            RefreshCartPurchasetable(purchasesList);

            int tot = 0;
            gamesList.clear();
            for (Purchases p : purchasesList) {
                Games g = GameSellShopPUEntityManager.find(Games.class, p.getGameid().getId());
                gamesList.add(g);
                tot = tot += (g.getRetailprice() - (g.getDiscount() * (g.getRetailprice() / 100))) * p.getQuantity();
            }
            RefreshCartGamestable(gamesList);
            jLabel15.setText("" + tot);

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage(), "Error : Cart Loading Failed", JOptionPane.ERROR_MESSAGE);
            logr.log(Level.SEVERE, "Card Loading Failed : " + ex.getMessage());
        }
    }//GEN-LAST:event_L_btn_CartActionPerformed

    private void btn_accountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_accountActionPerformed
        cLayout.show(JPC, "Account");
        try {
            Users u = GameSellShopPUEntityManager.find(Users.class, jLabel28.getText());
            JPC_Account_txtbox_name.setText(u.getName());
            JPC_Account_jcombo_lang.setSelectedItem(u.getLanguage());
            JPC_Account_check_resetpass.setSelected(u.getResetpass());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Please try again later.", "Error : Failed Account Action", JOptionPane.ERROR_MESSAGE);
            logr.log(Level.SEVERE, "Failed Account Action" + ex.getMessage());
        }
    }//GEN-LAST:event_btn_accountActionPerformed

    private void btn_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_exitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btn_exitActionPerformed

    private void JPC_EditGame_btn_browseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JPC_EditGame_btn_browseActionPerformed
        try {
            FileNameExtensionFilter filter = new FileNameExtensionFilter("Image Files", "jpg", "png", "gif", "jpeg");
            jFileChooser1.setFileFilter(filter);
            int r = jFileChooser1.showDialog(rootPane, "Select an Image");
            if (r == JFileChooser.APPROVE_OPTION) {
                Toolkit tk = Toolkit.getDefaultToolkit();
                Image img = tk.getImage(jFileChooser1.getSelectedFile().getAbsolutePath());
                Image sclImg = img.getScaledInstance(JPC_EditGame_lbl_picture.getWidth(), JPC_EditGame_lbl_picture.getHeight(), Image.SCALE_DEFAULT);
                JPC_EditGame_lbl_picture.setIcon(new ImageIcon(sclImg));
                JPC_EditGame_lbl_picture.setText("");
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Please try again later.", "Error : Failed to Load Image", JOptionPane.ERROR_MESSAGE);
            logr.log(Level.SEVERE, "Failed to Load Image : " + ex.getMessage());
        }
    }//GEN-LAST:event_JPC_EditGame_btn_browseActionPerformed

    private void JPC_EditGame_jtableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JPC_EditGame_jtableMouseClicked
        try {
            int r = JPC_EditGame_jtable.getSelectedRow();
            if (gamesList.get(r).getPicture() != null) {
                Toolkit tk = Toolkit.getDefaultToolkit();
                Image img = tk.getImage(gamesList.get(r).getPicture());
                Image sclImg = img.getScaledInstance(JPC_EditGame_lbl_picture.getWidth(), JPC_EditGame_lbl_picture.getHeight(), Image.SCALE_DEFAULT);
                JPC_EditGame_lbl_picture.setIcon(new ImageIcon(sclImg));
                JPC_EditGame_lbl_picture.setText("");
            } else {
                JPC_EditGame_lbl_picture.setIcon(null);
            }

            Date datefromDB = gamesList.get(r).getDatereleased();
            String pattern = "dd/MM/yyyy";
            DateFormat df = new SimpleDateFormat(pattern);
            String dateinString = df.format(datefromDB);

            JPC_EditGame_txtbox_datereleased.setText(dateinString);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Please try again later.", "Error : Failed Process Table", JOptionPane.ERROR_MESSAGE);
            logr.log(Level.SEVERE, "Failed to Process Edit Game Table : " + ex.getMessage());
        }
    }//GEN-LAST:event_JPC_EditGame_jtableMouseClicked

    private void JPC_EditGame_btn_confirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JPC_EditGame_btn_confirmActionPerformed
        try {
            Games g = GameSellShopPUEntityManager.find(Games.class, Integer.parseInt(JPC_EditGame_lbl_id.getText()));
            g.setName(JPC_EditGame_txtbox_name.getText());
            g.setGenre((Genre) JPC_EditGame_jcomb_genre.getSelectedItem());

            String datein = JPC_EditGame_txtbox_datereleased.getText();
            Date dateout = new SimpleDateFormat("dd/MM/yyyy").parse(datein);
            g.setDatereleased(dateout);

            g.setCompany(JPC_EditGame_txtbox_company.getText());
            g.setDescription(JPC_EditGame_txtarea_description.getText());

            if (jFileChooser1.getSelectedFile() != null) {
                g.setPicture(jFileChooser1.getSelectedFile().getAbsolutePath());
            }

            g.setStatus((Status) JPC_EditGame_jcomb_status.getSelectedItem());

            GameSellShopPUEntityManager.getTransaction().begin();
            GameSellShopPUEntityManager.merge(g);
            GameSellShopPUEntityManager.getTransaction().commit();

            gamesList.clear();
            gamesList = gamesQuery.getResultList();
            RefreshEditGameTable(gamesList);
            RefreshExistingGameTable(gamesList);

            JOptionPane.showMessageDialog(rootPane, "Game Edit Successfully");
            logr.log(Level.CONFIG, "Game " + JPC_EditGame_lbl_id.getText() + " edited success.");

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Please check if all fields' values are correctly entered.", "Error : Failed to Edit Game", JOptionPane.ERROR_MESSAGE);
            logr.log(Level.SEVERE, "Failed to Edit Game : " + ex.getMessage());
        }
    }//GEN-LAST:event_JPC_EditGame_btn_confirmActionPerformed

    private void jTextField5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5KeyReleased
        try {
            if (jRadioButton3.isSelected()) {
                Query qry = GameSellShopPUEntityManager.createQuery("SELECT g FROM Games g WHERE g.name like :name");
                qry.setParameter("name", "%" + jTextField5.getText() + "%");

                gamesList.clear();
                gamesList = qry.getResultList();
                RefreshEditGameTable(gamesList);

            } else if (jRadioButton2.isSelected()) {
                Query qry2 = GameSellShopPUEntityManager.createQuery("SELECT g FROM Games g WHERE g.discount = :discount");
                qry2.setParameter("discount", Integer.parseInt(jTextField5.getText()));

                gamesList.clear();
                gamesList = qry2.getResultList();
                RefreshEditGameTable(gamesList);
            } else if (jRadioButton1.isSelected()) {
                Query qry3 = GameSellShopPUEntityManager.createQuery("SELECT g FROM Games g WHERE g.id = :id");
                qry3.setParameter("id", Integer.parseInt(jTextField5.getText()));

                gamesList.clear();
                gamesList = qry3.getResultList();
                RefreshEditGameTable(gamesList);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Please try again later.", "Error : Search for Games", JOptionPane.ERROR_MESSAGE);
            logr.log(Level.SEVERE, "Failed to search games : " + ex.getMessage());
        }
    }//GEN-LAST:event_jTextField5KeyReleased

    private void JPC_EditGame_btn_resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JPC_EditGame_btn_resetActionPerformed
        try {
            Games g = GameSellShopPUEntityManager.find(Games.class, Integer.parseInt(JPC_EditGame_lbl_id.getText()));

            JPC_EditGame_lbl_id.setText("" + g.getId());
            JPC_EditGame_txtbox_name.setText(g.getName());
            JPC_EditGame_jcomb_genre.setSelectedItem(g.getGenre());

            Date date = g.getDatereleased();
            DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
            String strDate = dateFormat.format(date);

            JPC_EditGame_txtbox_datereleased.setText(strDate);
            JPC_EditGame_txtbox_company.setText(g.getCompany());
            JPC_EditGame_txtarea_description.setText(g.getDescription());

            if (g.getPicture() != null) {

                Toolkit tk = Toolkit.getDefaultToolkit();
                Image img = tk.getImage(g.getPicture());
                Image sclImg = img.getScaledInstance(JPC_EditGame_lbl_picture.getWidth(), JPC_EditGame_lbl_picture.getHeight(), Image.SCALE_DEFAULT);
                JPC_EditGame_lbl_picture.setIcon(new ImageIcon(sclImg));
                JPC_EditGame_lbl_picture.setText("");

            } else {
                JPC_EditGame_lbl_picture.setIcon(null);
            }

            JPC_EditGame_jcomb_status.setSelectedItem(g.getStatus());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Please try again later", "Error : Reset Failed", JOptionPane.ERROR_MESSAGE);
            logr.log(Level.SEVERE, "Reset button in Edit Game failed : " + ex.getMessage());
        }
    }//GEN-LAST:event_JPC_EditGame_btn_resetActionPerformed

    private void JPC_Account_btn_toggleresetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JPC_Account_btn_toggleresetActionPerformed
        if (!(JPC_Account_check_resetpass.isSelected())) {
            JPC_Account_check_resetpass.setSelected(true);
        } else {
            JPC_Account_check_resetpass.setSelected(false);
        }
    }//GEN-LAST:event_JPC_Account_btn_toggleresetActionPerformed

    private void JPC_Account_btn_confirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JPC_Account_btn_confirmActionPerformed
        try {
            Users u = GameSellShopPUEntityManager.find(Users.class, jLabel28.getText());

            u.setName(JPC_Account_txtbox_name.getText());
            u.setLanguage((Language) JPC_Account_jcombo_lang.getSelectedItem());
            u.setResetpass(JPC_Account_check_resetpass.isSelected());

            GameSellShopPUEntityManager.getTransaction().begin();
            GameSellShopPUEntityManager.merge(u);
            GameSellShopPUEntityManager.getTransaction().commit();

            JOptionPane.showMessageDialog(rootPane, "User Edited Successful!", "Edition : Success", JOptionPane.INFORMATION_MESSAGE);
            logr.log(Level.CONFIG, "User edited. Username : " + jLabel28.getText());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Failed to Confirm change. Please try again later", "Error : Failed to Confirm Action", JOptionPane.ERROR_MESSAGE);
            logr.log(Level.SEVERE, "Failed to Confirm Action : " + ex.getMessage());
        }
    }//GEN-LAST:event_JPC_Account_btn_confirmActionPerformed

    private void JPC_Account_btn_resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JPC_Account_btn_resetActionPerformed
        cLayout.show(JPC, "Account");
        try {
            Users u = GameSellShopPUEntityManager.find(Users.class, jLabel28.getText());
            JPC_Account_txtbox_name.setText(u.getName());
            JPC_Account_jcombo_lang.setSelectedItem(u.getLanguage());
            JPC_Account_check_resetpass.setSelected(u.getResetpass());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Failed to Reset Account Details. Please try again later", "Error : Failed to Reset Account Details", JOptionPane.ERROR_MESSAGE);
            logr.log(Level.SEVERE, "Failed to Reset Account Details : " + ex.getMessage());
        }
    }//GEN-LAST:event_JPC_Account_btn_resetActionPerformed

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        Query qry = GameSellShopPUEntityManager.createQuery("SELECT g FROM Games g WHERE g.name like :name");
        qry.setParameter("name", "%" + jTextField1.getText() + "%");

        gamesList.clear();
        gamesList = qry.getResultList();
        RefreshGameListtable(gamesList);
    }//GEN-LAST:event_jTextField1KeyReleased

    private void JPC_AddGame_exist_btn_resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JPC_AddGame_exist_btn_resetActionPerformed
        JPC_AddGame_exist_lbl_id.setText("001");
        JPC_AddGame_exist_jspin_stocks.setValue(0);
    }//GEN-LAST:event_JPC_AddGame_exist_btn_resetActionPerformed

    private void JPC_AddGame_exist_btn_confirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JPC_AddGame_exist_btn_confirmActionPerformed
        try {
            int result = JOptionPane.showConfirmDialog(rootPane, "Do you confirm to add this amount to the game?", "Confirmation", JOptionPane.YES_NO_OPTION);

            if (result == 0) {
                Games g = GameSellShopPUEntityManager.find(Games.class, Integer.parseInt(JPC_AddGame_exist_lbl_id.getText()));
                int s = g.getStocks();
                g.setStocks(s + ((int) JPC_AddGame_exist_jspin_stocks.getValue()));

                GameSellShopPUEntityManager.getTransaction().begin();
                GameSellShopPUEntityManager.merge(g);
                GameSellShopPUEntityManager.getTransaction().commit();

                JPC_AddGame_exist_txtbox_search.setText("");
                gamesList.clear();
                gamesList = gamesQuery.getResultList();
                RefreshEditGameTable(gamesList);
                RefreshExistingGameTable(gamesList);

                JPC_AddGame_exist_lbl_id.setText("001");
                JPC_AddGame_exist_jspin_stocks.setValue(0);

            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Please try again later.", "Error : Editing Stocks", JOptionPane.ERROR_MESSAGE);
            logr.log(Level.SEVERE, "Failed edit stocks : " + ex.getMessage());
        }
    }//GEN-LAST:event_JPC_AddGame_exist_btn_confirmActionPerformed

    private void JPC_AddGame_exist_txtbox_searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JPC_AddGame_exist_txtbox_searchKeyReleased
        try {
            if (jRadioButton4.isSelected()) {
                Query qry = GameSellShopPUEntityManager.createQuery("SELECT g FROM Games g WHERE g.name like :name");
                qry.setParameter("name", "%" + JPC_AddGame_exist_txtbox_search.getText() + "%");

                gamesList.clear();
                gamesList = qry.getResultList();
                RefreshExistingGameTable(gamesList);

            } else if (jRadioButton5.isSelected()) {
                Query qry2 = GameSellShopPUEntityManager.createQuery("SELECT g FROM Games g WHERE g.id = :id");
                qry2.setParameter("id", Integer.parseInt(JPC_AddGame_exist_txtbox_search.getText()));

                gamesList.clear();
                gamesList = qry2.getResultList();
                RefreshExistingGameTable(gamesList);
            } else if (jRadioButton6.isSelected()) {
                Query qry3 = GameSellShopPUEntityManager.createQuery("SELECT g FROM Games g WHERE g.company like :company");
                qry3.setParameter("company", "%" + JPC_AddGame_exist_txtbox_search.getText() + "%");

                gamesList.clear();
                gamesList = qry3.getResultList();
                RefreshExistingGameTable(gamesList);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Please try again later.", "Error : Search for Games", JOptionPane.ERROR_MESSAGE);
            logr.log(Level.SEVERE, "Failed to search games : " + ex.getMessage());
        }
    }//GEN-LAST:event_JPC_AddGame_exist_txtbox_searchKeyReleased

    private void JPC_GameList_btn_addcartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JPC_GameList_btn_addcartActionPerformed
        try {
            Games g = GameSellShopPUEntityManager.find(Games.class, Integer.parseInt(jLabel29.getText()));
            Orders o;
            int quan = 0;

            while (true) {
                String in = JOptionPane.showInputDialog(rootPane, "Please Enter Quantity", "Quantity", JOptionPane.INFORMATION_MESSAGE);
                if (TryParseInt(in) != null) {

                    if (Integer.parseInt(in) <= g.getStocks()) {

                        quan = Integer.parseInt(in);
                        g.setStocks(g.getStocks() - quan);
                        break;
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "The number you entered has more value than the stocks which are in the database", "Wrong Value", JOptionPane.ERROR_MESSAGE);
                    }
                } else if (in == null) {
                    return;
                }
            }
            ordersList.clear();
            ordersList = ordersQuery.getResultList();

            if (L_btn_Cart.isEnabled()) {
                o = ordersList.get(ordersList.size() - 1);
            } else {
                o = new Orders();
                //o.setId(1);
                o.setId(ordersList.get(ordersList.size() - 1).getId() + 1);
                Users u = GameSellShopPUEntityManager.find(Users.class, usernameglobal);
                o.setClientusername(u);
                o.setCustomername("Customer Name");
                o.setCustomerphone(null);
                o.setNoofgamespurchased(quan);

                SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
                Date date = new Date();
                o.setPurchaseddate(date);

                GameSellShopPUEntityManager.getTransaction().begin();
                GameSellShopPUEntityManager.persist(o);
                GameSellShopPUEntityManager.getTransaction().commit();
            }

            purchasesList.clear();
            purchasesList = purchasesQuery.getResultList();
            Purchases p = new Purchases();
            p.setGameid(g);
            p.setOrderid(o);
            p.setQuantity(quan);
            //p.setId(1);
            p.setId(purchasesList.get(purchasesList.size() - 1).getId() + 1);

            GameSellShopPUEntityManager.getTransaction().begin();
            GameSellShopPUEntityManager.persist(p);
            GameSellShopPUEntityManager.getTransaction().commit();

            gamesList.clear();
            gamesList = gamesQuery.getResultList();
            RefreshGameListtable(gamesList);

            L_btn_Cart.setEnabled(true);
            JOptionPane.showMessageDialog(rootPane, "Successfully Added!");

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, ex, "Error : Failed to Add to Cart", JOptionPane.ERROR_MESSAGE);
            logr.log(Level.SEVERE, "Failed to Add to Cart : " + ex.getMessage());
        }
    }//GEN-LAST:event_JPC_GameList_btn_addcartActionPerformed

    private void JPC_Cart_btn_removegameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JPC_Cart_btn_removegameActionPerformed
        try {
            int index = (Integer.parseInt(JPC_Cart_lbl_purchaseid.getText()));
            Purchases p = GameSellShopPUEntityManager.find(Purchases.class, index);
            Games g = GameSellShopPUEntityManager.find(Games.class, p.getGameid().getId());
            g.setStocks(g.getStocks() + p.getQuantity());

            GameSellShopPUEntityManager.getTransaction().begin();
            GameSellShopPUEntityManager.remove(p);
            GameSellShopPUEntityManager.merge(g);
            GameSellShopPUEntityManager.getTransaction().commit();

            purchasesList.clear();
            purchasesList = purchasesQuery.getResultList();
            RefreshCartPurchasetable(purchasesList);
            L_btn_CartActionPerformed(evt);

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, ex, "Error : Failed to Remove Game", JOptionPane.ERROR_MESSAGE);
            logr.log(Level.FINE, "Failed to remove Game : " + ex.getMessage());
        }
    }//GEN-LAST:event_JPC_Cart_btn_removegameActionPerformed

    private void JPC_Cart_btn_processcartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JPC_Cart_btn_processcartActionPerformed
        try {
            int result = JOptionPane.showConfirmDialog(rootPane, "Do you want to print the receipt?", "Confirmation", JOptionPane.YES_NO_OPTION);
            if (result == 0) {
                Orders o = GameSellShopPUEntityManager.find(Orders.class, Integer.parseInt(jLabel13.getText()));
                o.setCustomername(jTextField4.getText());
                BigInteger num = new BigInteger(jTextField6.getText());
                if (num == null) {
                    num = BigInteger.ZERO;
                }
                o.setCustomerphone(num);
                o.setTotalprice(Integer.parseInt(jLabel15.getText()));
                o.setNoofgamespurchased(purchasesList.size());

                PrinterJob pj = PrinterJob.getPrinterJob();
                pj.setPrintable(new BillPrintable(), getPageFormat(pj));

                pj.print();

                GameSellShopPUEntityManager.getTransaction().begin();
                GameSellShopPUEntityManager.merge(o);
                GameSellShopPUEntityManager.getTransaction().commit();

                JOptionPane.showMessageDialog(rootPane, "File Printed Successfully!");
                purchasesList.clear();
                L_btn_Cart.setEnabled(false);
                L_btn_DashboardActionPerformed(evt);

            }
        } catch (PrinterException ex) {
            ex.printStackTrace();
        }


    }//GEN-LAST:event_JPC_Cart_btn_processcartActionPerformed

    private void jTextField2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyReleased
        try {
            if (jRadioButton10.isSelected()) {
                Query qry = GameSellShopPUEntityManager.createQuery("SELECT g FROM Games g WHERE g.name like :name");
                qry.setParameter("name", "%" + jTextField2.getText() + "%");

                gamesList.clear();
                gamesList = qry.getResultList();
                RefreshGameSearchListtable(gamesList);

            } else if (jRadioButton11.isSelected()) {
                Query qry2 = GameSellShopPUEntityManager.createQuery("SELECT g FROM Games g WHERE g.company like :company");
                qry2.setParameter("company", "%" + jTextField2.getText() + "%");

                gamesList.clear();
                gamesList = qry2.getResultList();
                RefreshGameSearchListtable(gamesList);
            } else if (jRadioButton12.isSelected()) {
                Query qry3 = GameSellShopPUEntityManager.createQuery("SELECT g FROM Games g WHERE g.id = :id");
                qry3.setParameter("id", Integer.parseInt(jTextField2.getText()));

                gamesList.clear();
                gamesList = qry3.getResultList();
                RefreshGameSearchListtable(gamesList);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Please try again later.", "Error : Search for Games", JOptionPane.ERROR_MESSAGE);
            logr.log(Level.SEVERE, "Failed to search games : " + ex.getMessage());
        }
    }//GEN-LAST:event_jTextField2KeyReleased

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        List latestaddedgames;
        try {
            if (jComboBox1.getSelectedIndex() == 0) {
                gamesList.clear();
                gamesList = gamesQuery.getResultList();
                Query qry = GameSellShopPUEntityManager.createQuery("SELECT g FROM Games g WHERE g.status = :status");
                qry.setParameter("status", new Status(1));
                latestaddedgames = gamesList;
                latestaddedgames.clear();
                latestaddedgames = qry.getResultList();
                RefreshGameSearchListtable(latestaddedgames);
            } else if (jComboBox1.getSelectedIndex() == 1) {
                gamesList.clear();
                gamesList = gamesQuery.getResultList();
                Query qry = GameSellShopPUEntityManager.createQuery("SELECT g FROM Games g WHERE g.status = :status");
                qry.setParameter("status", new Status(2));
                latestaddedgames = gamesList;
                latestaddedgames.clear();
                latestaddedgames = qry.getResultList();
                RefreshGameSearchListtable(latestaddedgames);
            } else if (jComboBox1.getSelectedIndex() == 2) {
                gamesList.clear();
                gamesList = gamesQuery.getResultList();
                Query qry = GameSellShopPUEntityManager.createQuery("SELECT g FROM Games g WHERE g.status = :status");
                qry.setParameter("status", new Status(3));
                latestaddedgames = gamesList;
                latestaddedgames.clear();
                latestaddedgames = qry.getResultList();
                RefreshGameSearchListtable(latestaddedgames);
            } else if (jComboBox1.getSelectedIndex() == 3) {
                gamesList.clear();
                gamesList = gamesQuery.getResultList();
                Query qry = GameSellShopPUEntityManager.createQuery("SELECT g FROM Games g WHERE g.status = :status");
                qry.setParameter("status", new Status(4));
                latestaddedgames = gamesList;
                latestaddedgames.clear();
                latestaddedgames = qry.getResultList();
                RefreshGameSearchListtable(latestaddedgames);
            } else if (jComboBox1.getSelectedIndex() == 4) {
                gamesList.clear();
                gamesList = gamesQuery.getResultList();
                Query qry = GameSellShopPUEntityManager.createQuery("SELECT g FROM Games g WHERE g.status = :status");
                qry.setParameter("status", new Status(5));
                latestaddedgames = gamesList;
                latestaddedgames.clear();
                latestaddedgames = qry.getResultList();
                RefreshGameSearchListtable(latestaddedgames);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Failed to Filter. Please try again later.", "Error : Failed to Filter", JOptionPane.ERROR_MESSAGE);
            logr.log(Level.SEVERE, "Failed to Filter : " + ex.getMessage());
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    public class BillPrintable implements Printable {

        public int print(Graphics graphics, PageFormat pageFormat, int pageIndex)
                throws PrinterException {

            int result = NO_SUCH_PAGE;
            if (pageIndex == 0) {

                Graphics2D g2d = (Graphics2D) graphics;

                double width = pageFormat.getImageableWidth();

                g2d.translate((int) pageFormat.getImageableX(), (int) pageFormat.getImageableY());

                ////////// code by alqama//////////////
                FontMetrics metrics = g2d.getFontMetrics(new Font("Times New Roman", Font.BOLD, 7));
                //    int idLength=metrics.stringWidth("000000");
                //int idLength=metrics.stringWidth("00");
                int idLength = metrics.stringWidth("000");
                int amtLength = metrics.stringWidth("000000");
                int qtyLength = metrics.stringWidth("00000");
                int priceLength = metrics.stringWidth("000000");
                int prodLength = (int) width - idLength - amtLength - qtyLength - priceLength - 17;

                //    int idPosition=0;
                //    int productPosition=idPosition + idLength + 2;
                //    int pricePosition=productPosition + prodLength +10;
                //    int qtyPosition=pricePosition + priceLength + 2;
                //    int amtPosition=qtyPosition + qtyLength + 2;
                int productPosition = 0;
                int discountPosition = prodLength + 5;
                int pricePosition = discountPosition + idLength + 10;
                int qtyPosition = pricePosition + priceLength + 4;
                int amtPosition = qtyPosition + qtyLength;

                try {
                    /*Draw Header*/
                    int y = 20;
                    int yShift = 10;
                    int headerRectHeight = 15;
                    int headerRectHeighta = 40;
                    SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
                    Date date = new Date();

                    g2d.setFont(new Font("Monospaced", Font.PLAIN, 9));
                    g2d.drawString("-------------------------------------", 12, y);
                    y += yShift;
                    g2d.drawString("              Game Shop              ", 12, y);
                    y += yShift;
                    g2d.drawString("-------------------------------------", 12, y);
                    y += headerRectHeight;

                    g2d.drawString(" Customer : " + jTextField4.getText() + "", 12, y);
                    y += yShift;
                    g2d.drawString(" Client : " + usernameglobal + "", 12, y);
                    y += yShift;
                    g2d.drawString(" Date : " + date.toString() + "", 12, y);
                    y += yShift;
                    g2d.drawString(" Number : " + jTextField6.getText() + "", 12, y);
                    y += yShift;

                    g2d.drawString("-------------------------------------", 10, y);
                    y += yShift;
                    g2d.drawString(" Game     -------------     Price     ", 10, y);
                    y += yShift;
                    g2d.drawString("-------------------------------------", 10, y);
                    y += headerRectHeight;
                    for (Purchases p : purchasesList) {
                        String var1 = p.getGameid().getName();
                        int var2 = (p.getGameid().getRetailprice() - (p.getGameid().getRetailprice() * (p.getGameid().getDiscount() / 100))) * p.getQuantity();
                        g2d.drawString(" " + var1 + "---" + var2 + "", 10, y);
                        y += yShift;
                    }
                    g2d.drawString("-------------------------------------", 10, y);
                    y += yShift;
                    g2d.drawString(" Total amount: " + jLabel15.getText() + "               ", 10, y);
                    y += yShift;
                    g2d.drawString("-------------------------------------", 10, y);
                    y += yShift;
                    g2d.drawString("          Hope you liked         ", 10, y);
                    y += yShift;
                    g2d.drawString("             0112546653             ", 10, y);
                    y += yShift;
                    g2d.drawString("*************************************", 10, y);
                    y += yShift;
                    g2d.drawString("        THANK YOU FOR VISITING       ", 10, y);
                    y += yShift;
                    g2d.drawString("*************************************", 10, y);
                    y += yShift;

//            g2d.setFont(new Font("Monospaced",Font.BOLD,10));
//            g2d.drawString("Customer Shopping Invoice", 30,y);y+=yShift; 
                } catch (Exception r) {
                    r.printStackTrace();
                }

                result = PAGE_EXISTS;
            }
            return result;
        }
    }

    public PageFormat getPageFormat(PrinterJob pj) {

        PageFormat pf = pj.defaultPage();
        Paper paper = pf.getPaper();

        double middleHeight = 8.0;
        double headerHeight = 2.0;
        double footerHeight = 2.0;
        double width = convert_CM_To_PPI(8);      //printer know only point per inch.default value is 72ppi
        double height = convert_CM_To_PPI(headerHeight + middleHeight + footerHeight);
        paper.setSize(width, height);
        paper.setImageableArea(
                0,
                10,
                width,
                height - convert_CM_To_PPI(1)
        );   //define boarder size    after that print area width is about 180 points

        pf.setOrientation(PageFormat.PORTRAIT);           //select orientation portrait or landscape but for this time portrait
        pf.setPaper(paper);

        return pf;
    }

    protected static double convert_CM_To_PPI(double cm) {
        return toPPI(cm * 0.393600787);
    }

    protected static double toPPI(double inch) {
        return inch * 72d;
    }

    private static Integer TryParseInt(String someText) {
        try {
            return Integer.parseInt(someText);
        } catch (NumberFormatException ex) {
            return null;
        }
    }

    void RefreshEditGameTable(List sList) {
        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, sList, JPC_EditGame_jtable);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${id}"));
        columnBinding.setColumnName("Id");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${name}"));
        columnBinding.setColumnName("Name");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${retailprice}"));
        columnBinding.setColumnName("Retailprice");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${discount}"));
        columnBinding.setColumnName("Discount");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${stocks}"));
        columnBinding.setColumnName("Stocks");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${status}"));
        columnBinding.setColumnName("Status");
        columnBinding.setColumnClass(GUI.Status.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
    }

    void RefreshExistingGameTable(List sList) {
        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, sList, JPC_AddGame_exist_table);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${id}"));
        columnBinding.setColumnName("Id");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${name}"));
        columnBinding.setColumnName("Name");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${company}"));
        columnBinding.setColumnName("Company");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${genre}"));
        columnBinding.setColumnName("Genre");
        columnBinding.setColumnClass(GUI.Genre.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${status}"));
        columnBinding.setColumnName("Status");
        columnBinding.setColumnClass(GUI.Status.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${stocks}"));
        columnBinding.setColumnName("Stocks");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
    }

    void RefreshNewGamestable(List sList) {
        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, sList, JPC_Dashboard_tbl_newgames);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${id}"));
        columnBinding.setColumnName("Id");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${name}"));
        columnBinding.setColumnName("Name");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${company}"));
        columnBinding.setColumnName("Company");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${stocks}"));
        columnBinding.setColumnName("Stocks");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${dateadded}"));
        columnBinding.setColumnName("Dateadded");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${genre}"));
        columnBinding.setColumnName("Genre");
        columnBinding.setColumnClass(GUI.Genre.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${retailprice}"));
        columnBinding.setColumnName("Retailprice");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${discount}"));
        columnBinding.setColumnName("Discount");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${soldamount}"));
        columnBinding.setColumnName("Soldamount");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
    }

    void RefreshDiscountedGamestable(List sList) {
        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, sList, JPC_Dashboard_tbl_discountedgames);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${id}"));
        columnBinding.setColumnName("Id");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${name}"));
        columnBinding.setColumnName("Name");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${company}"));
        columnBinding.setColumnName("Company");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${genre}"));
        columnBinding.setColumnName("Genre");
        columnBinding.setColumnClass(GUI.Genre.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${retailprice}"));
        columnBinding.setColumnName("Retailprice");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${soldamount}"));
        columnBinding.setColumnName("Soldamount");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${datereleased}"));
        columnBinding.setColumnName("Datereleased");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${dateadded}"));
        columnBinding.setColumnName("Dateadded");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${stocks}"));
        columnBinding.setColumnName("Stocks");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${discount}"));
        columnBinding.setColumnName("Discount");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${status}"));
        columnBinding.setColumnName("Status");
        columnBinding.setColumnClass(GUI.Status.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
    }

    void RefreshGameListtable(List sList) {
        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, sList, JPC_GameList_tbl_gamelist);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${id}"));
        columnBinding.setColumnName("Id");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${name}"));
        columnBinding.setColumnName("Name");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${company}"));
        columnBinding.setColumnName("Company");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${genre}"));
        columnBinding.setColumnName("Genre");
        columnBinding.setColumnClass(GUI.Genre.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${discount}"));
        columnBinding.setColumnName("Discount");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${retailprice}"));
        columnBinding.setColumnName("Retailprice");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${status}"));
        columnBinding.setColumnName("Status");
        columnBinding.setColumnClass(GUI.Status.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${stocks}"));
        columnBinding.setColumnName("Stocks");
        columnBinding.setColumnClass(Integer.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
    }

    void RefreshGameSearchListtable(List sList) {
        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, sList, JPC_SearchGames_table);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${id}"));
        columnBinding.setColumnName("Id");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${name}"));
        columnBinding.setColumnName("Name");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${genre}"));
        columnBinding.setColumnName("Genre");
        columnBinding.setColumnClass(GUI.Genre.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${status}"));
        columnBinding.setColumnName("Status");
        columnBinding.setColumnClass(GUI.Status.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${stocks}"));
        columnBinding.setColumnName("Stocks");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${company}"));
        columnBinding.setColumnName("Company");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${dateadded}"));
        columnBinding.setColumnName("Dateadded");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${datereleased}"));
        columnBinding.setColumnName("Datereleased");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${discount}"));
        columnBinding.setColumnName("Discount");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${retailprice}"));
        columnBinding.setColumnName("Retailprice");
        columnBinding.setColumnClass(Integer.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
    }

    void RefreshCartPurchasetable(List sList) {
        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, sList, jTable1);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${id}"));
        columnBinding.setColumnName("Id");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${gameid}"));
        columnBinding.setColumnName("Gameid");
        columnBinding.setColumnClass(GUI.Games.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${quantity}"));
        columnBinding.setColumnName("Quantity");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
    }

    void RefreshCartGamestable(List sList) {
        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, sList, jTable2);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${id}"));
        columnBinding.setColumnName("Id");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${name}"));
        columnBinding.setColumnName("Name");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${company}"));
        columnBinding.setColumnName("Company");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${genre}"));
        columnBinding.setColumnName("Genre");
        columnBinding.setColumnClass(GUI.Genre.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${stocks}"));
        columnBinding.setColumnName("Stocks");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${retailprice}"));
        columnBinding.setColumnName("Retailprice");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${discount}"));
        columnBinding.setColumnName("Discount");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        Logman lm = new Logman();
        lm.SetupLogger(logr);

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cashier_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cashier_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cashier_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cashier_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cashier_GUI().setVisible(true);
            }
        });
    }

    @Override
    public void run() {
        while (true) {
            Calendar cal = Calendar.getInstance();
            hour = cal.get(Calendar.HOUR_OF_DAY);
            minute = cal.get(Calendar.MINUTE);
            second = cal.get(Calendar.SECOND);

            SimpleDateFormat sdf12 = new SimpleDateFormat("aa");
            SimpleDateFormat hour12 = new SimpleDateFormat("hh");
            Date dat = cal.getTime();
            String time24 = sdf12.format(dat);

            lbl_hour.setText(hour12.format(dat));
            lbl_minute.setText("" + minute);
            lbl_second.setText("" + second);
            lbl_a.setText(time24);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup AddExistingGameSearchGroup;
    private javax.swing.ButtonGroup DeleteGamesSearchGroup;
    private javax.swing.ButtonGroup EditGameSearchGroup;
    private javax.persistence.EntityManager GameSellShopPUEntityManager;
    private javax.swing.JPanel JPC;
    private javax.swing.JPanel JPC_API;
    private javax.swing.JPanel JPC_Account;
    private javax.swing.JButton JPC_Account_btn_confirm;
    private javax.swing.JButton JPC_Account_btn_reset;
    private javax.swing.JButton JPC_Account_btn_togglereset;
    private javax.swing.JCheckBox JPC_Account_check_resetpass;
    private javax.swing.JComboBox<String> JPC_Account_jcombo_lang;
    private javax.swing.JTextField JPC_Account_txtbox_name;
    private javax.swing.JPanel JPC_AddGame;
    private javax.swing.JButton JPC_AddGame_exist_btn_confirm;
    private javax.swing.JButton JPC_AddGame_exist_btn_reset;
    private javax.swing.JSpinner JPC_AddGame_exist_jspin_stocks;
    private javax.swing.JLabel JPC_AddGame_exist_lbl_id;
    private javax.swing.JTable JPC_AddGame_exist_table;
    private javax.swing.JTextField JPC_AddGame_exist_txtbox_search;
    private javax.swing.JPanel JPC_Cart;
    private javax.swing.JButton JPC_Cart_btn_processcart;
    private javax.swing.JButton JPC_Cart_btn_removegame;
    private javax.swing.JLabel JPC_Cart_lbl_purchaseid;
    private javax.swing.JPanel JPC_Dashboard;
    private javax.swing.JLabel JPC_Dashboard_lbl_latestgame;
    private javax.swing.JLabel JPC_Dashboard_lbl_uname;
    private javax.swing.JTable JPC_Dashboard_tbl_discountedgames;
    private javax.swing.JTable JPC_Dashboard_tbl_newgames;
    private javax.swing.JPanel JPC_EditGame;
    private javax.swing.JButton JPC_EditGame_btn_browse;
    private javax.swing.JButton JPC_EditGame_btn_confirm;
    private javax.swing.JButton JPC_EditGame_btn_reset;
    private javax.swing.JComboBox<String> JPC_EditGame_jcomb_genre;
    private javax.swing.JComboBox<String> JPC_EditGame_jcomb_status;
    private javax.swing.JTable JPC_EditGame_jtable;
    private javax.swing.JLabel JPC_EditGame_lbl_id;
    private javax.swing.JLabel JPC_EditGame_lbl_picture;
    private javax.swing.JTextArea JPC_EditGame_txtarea_description;
    private javax.swing.JTextField JPC_EditGame_txtbox_company;
    private javax.swing.JTextField JPC_EditGame_txtbox_datereleased;
    private javax.swing.JTextField JPC_EditGame_txtbox_name;
    private javax.swing.JPanel JPC_GameList;
    private javax.swing.JButton JPC_GameList_btn_addcart;
    private javax.swing.JTable JPC_GameList_tbl_gamelist;
    private javax.swing.JPanel JPC_SearchGames;
    private javax.swing.JTable JPC_SearchGames_table;
    private javax.swing.JPanel JPC_Welcome;
    private javax.swing.JLabel JPC_Welcome_lbl;
    private javax.swing.JPanel JPL;
    private javax.swing.JPanel JPR;
    private javax.swing.JButton L_btn_API;
    private javax.swing.JButton L_btn_AddGame;
    private javax.swing.JButton L_btn_Cart;
    private javax.swing.JButton L_btn_Dashboard;
    private javax.swing.JButton L_btn_EditGame;
    private javax.swing.JButton L_btn_GamesList;
    private javax.swing.JButton L_btn_SearchGames;
    private javax.swing.ButtonGroup SearchGameSearchGroup;
    private javax.swing.JButton btn_account;
    private javax.swing.JButton btn_exit;
    private javax.swing.JButton btn_logout;
    private java.util.List<GUI.Games> gamesList;
    private javax.persistence.Query gamesQuery;
    private java.util.List<GUI.Genre> genreList;
    private javax.persistence.Query genreQuery;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton10;
    private javax.swing.JRadioButton jRadioButton11;
    private javax.swing.JRadioButton jRadioButton12;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JSeparator jSeparator16;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private java.util.List<GUI.Language> languageList;
    private javax.persistence.Query languageQuery;
    private javax.swing.JLabel lbl_a;
    private javax.swing.JLabel lbl_hour;
    private javax.swing.JLabel lbl_minute;
    private javax.swing.JLabel lbl_second;
    private java.util.List<GUI.Orders> ordersList;
    private javax.persistence.Query ordersQuery;
    private java.util.List<GUI.Purchases> purchasesList;
    private javax.persistence.Query purchasesQuery;
    private java.util.List<GUI.Status> statusList;
    private javax.persistence.Query statusQuery;
    private java.util.List<GUI.Users> usersList;
    private javax.persistence.Query usersQuery;
    private java.util.List<GUI.Usertype> usertypeList;
    private javax.persistence.Query usertypeQuery;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
